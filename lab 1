#include <stdio.h>

int fun() {
	printf("Please enter 10 values to add their sum:\n");
	int val, sum=0;
	for (int i = 0; i <= 9; i++) {
		scanf_s("%d", &val);
		sum += val;
	}
	printf("Sum of 10 values is %d", sum);
	return 1;
}

#include <stdio.h>
#include <math.h>

int fun() {
	float vals[2];
	int operation;
	float result;

	printf("Please enter 2 values to perform calculations with:\n");
	
	for (int i = 0; i < 2; i++) {
		scanf_s("%f", &vals[i]);
	}

	printf("Please enter operation to perform on values:\n 1. add\n 2. subtract\n 3. multiply\n 4. divide\n 5. raise first value to power of second value\n ");
	scanf_s("%d", &operation);

	switch (operation) {
		case 1:
			result = vals[0] + vals[1];
			printf("Sum is %f", result);
		break;
		case 2:
			result = vals[1] - vals[0];
			printf("Difference is %f", result);
		break;
		case 3:
			result = vals[0] * vals[1];
			printf("Product is %f", result);
		break;
		case 4:
			if (vals[0] != 0) {
				result = vals[1] / vals[0];
				printf("Quotient is %f", result);
			}
			else {
				printf("Error dividing by 0");
			}
		break;
		case 5:
			result = pow(vals[0], vals[1]);
			printf("Result is %0.2f", result);
		break;
		default:
			printf("Invalid operation");
	}
	return 1;
}

#include <stdio.h>

int main() {
	char names[10][100] = {"Tom", "Bill", "Bob", "Karen", "Jim", "Sharon", "Helen", "Jerry", "Jeff", "Toby"};
	char phones[10][100] = {"1234567890", "2345678900", "3456789000", "4567890000", "5678900000", "0987654321", "9876543211", "8765432111", "7654321111", "6543211111"};
	char phoneSearch[100];
	char nameSearch[100];
	int nameFound = 0, phoneFound = 0;
	int count = 0;

	printf_s("Please enter name to search: ");
	scanf_s("%s[^\n]", nameSearch, 100);
	printf_s("Please enter phone number to search: ");
	scanf_s("%s[^\n]", phoneSearch, 100);

	for (int i = 0; i < 10; i++) {
		//printf_s("Name: %s\n", data[i]);
		//printf_s("Name: %s\n", nameSearch);
		/*for (int j = 0; j < 100; j++) {
			while (count < strlen(names[i])){
				if (nameSearch[j] == names[i][j]) {
					count++;
				}
				else {
					count = 0;
				}
				if (phoneSearch[j] == phones[i][j]) {
					phoneFound = 1;
				}
			}
		}*/
		nameFound = strcmp(names[i], nameSearch);
		phoneFound = strcmp(phones[i], phoneSearch);
		if (nameFound == 1) {
			printf_s("Name Found.");
		}
		if (phoneFound == 1) {
			printf_s("Phone Found.");
		}
		
	}

	if (phoneFound == 0 && nameFound == 0) {
		printf_s("No results returned.");
	}

	return 1;
}
